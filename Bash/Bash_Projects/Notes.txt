# Why Create a User and Attach S3 Full Access?
- Creating a User (s3-bash-user):
A user with AmazonS3FullAccess allows secure and controlled programmatic access to your S3 bucket.
Use this user when you need to upload files to S3 from your local machine or custom scripts.
- Attaching AmazonS3FullAccess to the User:
This grants the user permissions to perform all S3 actions (e.g., upload, delete, and list objects).
It's essential for ensuring the script can upload files to your S3 bucket without restrictions 

# Why Create a Role and Attach Permissions?
-Creating a Role (s3-bash-role):

Roles are designed for entities like EC2 instances. You don't need to store long-term credentials (e.g., access keys) inside the instance.
Instead, the role's permissions are automatically assigned to the EC2 instance.
- Attaching AmazonS3FullAccess to the Role:

Grants the instance the ability to interact with S3 buckets as needed by the script.
- Attaching AmazonSSMFullAccess to the Role:

This permission is required for managing the instance using AWS Systems Manager (SSM).
SSM allows you to securely access and execute commands on your EC2 instance without SSH, providing a secure and convenient way to manage instances.

# Summary of Roles vs Users
- User: Used for programmatic access from outside AWS (e.g., your local machine).
- Role: Used for assigning permissions to AWS services (e.g., EC2), eliminating the need for manual key management.
This separation improves security, ensures scalability, and follows best practices for AWS Identity and Access Management (IAM).

## Can i attach role only with this project ? 
#ï¿¼Steps to Use a Role Only:
    - Create an IAM Role for the EC2 Instance:
        Go to the IAM service in the AWS Management Console.
    - Create a new role and attach the following permissions:
        AmazonS3FullAccess: Grants full access to S3 for uploading and managing backups.
        AmazonSSMFullAccess (optional): Enables AWS Systems Manager for secure and easy management of your EC2 instance (e.g., running commands without SSH).
    - Attach the Role to the EC2 Instance:

        Go to the EC2 Dashboard.
        Select your instance, and choose Actions > Security > Modify IAM Role.
        Attach the role you created in Step 1 to the instance.
    - Run the Script:

        Log in to your EC2 instance.
        Ensure the aws-cli is installed and your script is in place.
        The role will automatically provide the necessary permissions to access the S3 bucket, so you don't need to configure aws configure or use access keys.

## Advantages of Using a Role Only:
    - Enhanced Security:
        
        No need to store access keys or secrets in your script or instance.
        Temporary credentials are automatically rotated and securely managed by AWS.
    - Ease of Use:
        
        Once the role is attached, your instance automatically inherits the permissions.
        No manual setup of credentials is required.
    - Scalability:
        
        If you create additional EC2 instances for the same project, you can reuse the role without extra configuration.